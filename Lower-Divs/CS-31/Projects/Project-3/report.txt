1. The first obstacle I ran into was that my program was constantly drawing lines 1 short of the expected length, resulting from a logic error I made in my for loops. The next I noticed was that when I returned to my code after a break, it became increasingly hard to reorient myself with what I had done. As a result of this, I found myself trying to pre-plan the next steps of my code so that I could group duplicate code into functions, which pretty much halted my progress, as I could never write anything. Finally, I ran into multiple errors trying to group duplicate code into functions, but was eventually able to resolve them through trial and error.

2. initialize global constants
   
   prototype functions

   main function:
	initialize grid and cursor settings
	repeat forever:
		prompt user input
		if user input empty,
			break
		perform commands
		if successful:
			draw the grid
		if syntax error:
			write there was a syntax error
		if other error:
			write the command cannot be performed

   plot line function:
	if row, column numbers, direction, mode, or character invalid:
		return false
	if direction horizontal:
		draw horizontal line based on parameters, return true if successful
	if direction vertical:
		draw vertical line based on parameters, return true if successful

   horizontal line function: 
	if drawing out of bounds:
		return false
	if negative distance:
		if mode is foreground:
			draw line left
		if mode is background:
			draw line left in locations with spaces only
	if positive distance:
		if mode is foreground:
			draw line right
		if mode is background:
			draw line right in locations with spaces only

   vertical line function:
	if drawing out of bounds:
		return false
	if negative distance:
		if mode is foreground:
			draw line up
		if mode is background:
			draw line up in locations with spaces only
	if positive distance:
		if mode is foreground:
			draw line down
		if mode is background:
			draw line down in locations with spaces only

   commands function:
	set initial coordinates
	repeatedly:
		if command begins with h:
			draw described horizontal line and return if unsuccessful
		if command begins with v:
			draw described vertical line and return if unsuccessful
		if command begins with f:
			if next character is not a printable one:
				return failure status #1
			set mode to foreground and following character to character
		if command begins with b:
			if next character is not a printable one:
				return failure status #1
			set mode to background and following character to character
		if command begins with c:
			revert to default settings
		otherwise:
			return failure status
	return success status when command string is completed

   line drawing function (for commands beginning with h and v):
	initialize variables
	if next character negative:
		set negative to true and increment position in command string
	repeated twice:
		if the next characters are digits, add them to a string
	if the string has no contents:
		return failure status #1
	convert the string into integer type, convert to negative if needed
	if the line is not within the grid:
		return failure status #2
	otherwise:
		adjust the position in the command string and in the grid
	return success status


3. h12V3H-1B@v-3    --> a correct input with a known output, tests all commands
   v2b h12fHh1fih0
   CV14

   h04 --> test if 04 = 4 in program

   h29 --> longest horizontal line

   h30 --> horizontal out of bounds

   h44 --> horizontal out of bounds (right)

   h-1 --> horizontal out of bounds (left)

   v19 --> longest vertical line

   v20 --> vertical out of bounds

   v44 --> vertical out of bounds (bottom)

   v-1 --> vertical out of bounds (up)

   q12   --> syntax error, unknown character
   h2 h4

   b --> syntax error, missing arguments

   h123 --> syntax error, numeric argument with >2 digits

   v --> potentially accesses bad string position
   f



   
   