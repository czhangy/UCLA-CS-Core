// assuming B is equal to cache block size
void transpose(int *dst, int *src, int dim) {
	for (int i = 0; i < dim; i += B) {
		for (int j = 0; j < dim; j+= B) {
			// within each tile
			for (int ib = i; ib < i + B; ib++) {
				int temp = ib * dim; // code motion
				for (int jb = j; jb < j + B; jb++)
					dst[jb*dim + ib] = src[temp + jb];
			}
		}
	}
}

Drawback: Matrices have to fit a whole number of cache blocks